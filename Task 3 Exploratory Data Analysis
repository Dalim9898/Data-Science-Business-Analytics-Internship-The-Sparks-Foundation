# THE SPARKS FOUNDATION

# Data Science & Business Analytics Internship GRIP Feb 2021

# Author : Udita Goswami

# TASK 3 : Exploratory Data Analysis 

Dataset -'SampleSuperstore'

Query - As a business manager, try to find out the weak areas where you can
        work to make more profit. 

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt;

cd C:\Users\user2\Documents\PG Notes & Books\Semester 1\Internship

df=pd.read_csv(r'SampleSuperstore.csv')

df

df.head()

df.shape

df.dtypes

duplicate_rows_df=df[df.duplicated()]
print("number of duplicate rows:",duplicate_rows_df.shape)

df1=df.drop_duplicates()

df1

df1.shape

df1.head()

print(df1.isnull().sum())

sns.boxplot(df1['Quantity'])

sns.boxplot(df1['Discount'])

import warnings
warnings.filterwarnings('ignore')

# There are outliers in both the cases

# Profit based on Ship Mode

df1['Ship Mode'].unique()

df1['Ship Mode'].value_counts()

sns.countplot(df1['Ship Mode'])

# Standard class Ship mode has the highest count

df1_shipmodes=df.groupby(['Ship Mode'])['Sales','Discount','Profit'].mean()
df1_shipmodes

df1[df1['Ship Mode']=='Standard Class'].Profit.sum()

df1[df1['Ship Mode']=='First Class'].Profit.sum()

df1[df1['Ship Mode']=='Second Class'].Profit.sum()

df1[df1['Ship Mode']=='Same Day'].Profit.sum()

df1_shipmodes.plot.pie(subplots=True,autopct='%1.2f%%',figsize=(18,20))

# Maximum profit has come from the First class Ship mode

# Profit based on Discount

df1['Discount'].unique()

df1['Discount'].value_counts()

df1_discnt=df.groupby(['Discount'])['Sales','Profit'].mean()
df1_discnt

df1[df1['Discount']==0.00].Profit.sum()

df1[df1['Discount']==0.20].Profit.sum()

df1[df1['Discount']==0.70].Profit.sum()

df1[df1['Discount']==0.80].Profit.sum()

df1[df1['Discount']==0.30].Profit.sum()

df1[df1['Discount']==0.40].Profit.sum()

df1[df1['Discount']==0.60].Profit.sum()

df1[df1['Discount']==0.10].Profit.sum()

df1[df1['Discount']==0.50].Profit.sum()

df1[df1['Discount']==0.15].Profit.sum()

df1[df1['Discount']==0.32].Profit.sum()

df1[df1['Discount']==0.45].Profit.sum()

df1_discnt['Profit'].plot(kind='bar',figsize=(15,8))
plt.ylabel('Profit')
plt.title('Profit vs Discount')
plt.legend()

# Maximum profit is at discount 0.1 and maximum negative profit is at discount 0.5

# Discount based on Quantity

df1['Discount'].unique()

df1['Quantity'].unique()

plt.scatter(df1['Discount'],df1['Quantity'],marker='o')

# Discount and Quantity are independent



# Profit based on Category


df1.head()

df1['Category'].unique()

df1['Category'].value_counts()

df1_ctgry=df1.groupby(['Category'])['Profit','Sales'].mean()
df1_ctgry

df1[df1['Category']=='Furniture'].Profit.sum()

df1[df1['Category']=='Technology'].Profit.sum()

df1[df1['Category']=='Office Supplies'].Profit.sum()

df1_ctgry.plot.pie(subplots=True,autopct='%1.1f%%',figsize=(14,10))

# Maximum profit comes from Technology category

# Profit based on Region

df1['Region'].unique()

df1['Region'].value_counts()

df1[df1['Region']=='West'].Profit.sum()

df1[df1['Region']=='East'].Profit.sum()

df1[df1['Region']=='Central'].Profit.sum()

df1[df1['Region']=='South'].Profit.sum()

df1_rgn=df1.groupby(['Region'])['Profit','Sales'].mean()
df1_rgn

df1_rgn.plot.pie(subplots=True,autopct='%1.1f%%',figsize=(16,19))

# Maximum profit comes from West region

df1_rgn['Profit'].plot(kind='bar',figsize=(9,5))
plt.ylabel('Profit')
plt.title('Profit vs Region')

# ----------------------------------------------THANK YOU-----------------------------------------------
